eventL <- c()
eventD <- c()
for(i in 1:ND){
if (widespreadArray[j, i, k]) {
eventGo <- eventGo + 1
}else{
if (eventGo > 0){
eventD <- c(eventD, i)
eventL <- c(eventL, eventGo)
#print(eventGo)
}
eventGo <- 0
}
}
eventLList[[j]][[k]] <- eventL
eventDayList[[j]][[k]] <- eventD
}
}
#save(eventLList, eventDayList,
#      file=paste0(wd,"CodeABG/InterimData/eventLists03.RDa"))
}
load(paste0(wd, "CodeABG/InterimData/eventLists03.RDa"))
par(mfrow=c(5,5), mgp=c(2,1,0), mar=c(3,3,1,0))
for(j in 1:5){
for(k in 1:5){
ylab <- ifelse(k == 1, threshName[j], "")
mainlab <- ifelse(j == 1, wsName[k], "")
xlab <- ifelse(j==5, "Length in days", "")
plot(table(eventLList[[j]][[k]]), ylab=ylab, main=mainlab,
xlab=xlab,
xlim=c(0,21), ylim=c(0,100), cex=0.7)
}
}
qv <- c()
for(qi in quantile(inunMat[4,inunMat[4,]>0],
probs=c(0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85))){
print(qi)
qv <- c(qv,which.min(abs(inunMat[4,] - qi)))
}
netcdf <- nc_open(paste0(wd,"dmflow_RCM01_198012_201011_out.nc"))
netcdf <- nc_open(paste0(wd,"CodeABG/InterimData/dmflow_timechunks.nc"))
var <- "dmflow"
for(i in 1:length(qv)){
day <- qv[i]
#flow <- raster(ncname_win, layer=day)
fl <- ncvar_get(ncin, var, start=c(1,1,day), count=c(-1, -1, 1))
flowM <- as.matrix(fl)[,1000:1]
s <- sum(flowM[!is.na(flowM)] > 0)
Wdown <- which(flowM > threshgrid, arr.ind=T)
print(dim(Wdown))
WW <- which(flowM <= threshgrid, arr.ind=T)
sw <- round(length(which(flowM > threshgrid))/s, 2) * 100 # % inundation
for(i in 1:nrow(WW)){
if(is.na(flowM[WW[i,1], WW[i,2]])) next
if(!(flowM[WW[i,1], WW[i,2]] == -1)){
flowM[WW[i,1], WW[i,2]] <- -0.5
}
}
flowM <- focal(as.raster(flowM), w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}},
na.rm=T)
brks <- c(-1.01, -0.51, seq(0, max(1500, na.rm=T), length.out=20))
png(paste0("./exampleevent_",extremes$Day[w[k]],"_",extremes$Inun[w[k]], ".png"),
res=300, width=100, height=100, units='mm', pointsize=10)
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(flowM, x=0:700, y=0:1250, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="Easting", ylab="Northing")
#pu <- par('usr')
#text(pu[1] + (pu[2]-pu[1])*0.9, pu[3] + (pu[4] - pu[3])*0.9,
#     paste0("POT5 threshold\n", sw, "% inundation"),
#     adj=c(1,0.5))
dev.off()
}
for(i in 1:length(qv)){
day <- qv[i]
#flow <- raster(ncname_win, layer=day)
fl <- ncvar_get(netcdf, var, start=c(1,1,day), count=c(-1, -1, 1))
flowM <- as.matrix(fl)[,1000:1]
s <- sum(flowM[!is.na(flowM)] > 0)
Wdown <- which(flowM > threshgrid, arr.ind=T)
print(dim(Wdown))
WW <- which(flowM <= threshgrid, arr.ind=T)
sw <- round(length(which(flowM > threshgrid))/s, 2) * 100 # % inundation
for(i in 1:nrow(WW)){
if(is.na(flowM[WW[i,1], WW[i,2]])) next
if(!(flowM[WW[i,1], WW[i,2]] == -1)){
flowM[WW[i,1], WW[i,2]] <- -0.5
}
}
flowM <- focal(as.raster(flowM), w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}},
na.rm=T)
brks <- c(-1.01, -0.51, seq(0, max(1500, na.rm=T), length.out=20))
png(paste0("./exampleevent_",extremes$Day[w[k]],"_",extremes$Inun[w[k]], ".png"),
res=300, width=100, height=100, units='mm', pointsize=10)
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(flowM, x=0:700, y=0:1250, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="Easting", ylab="Northing")
#pu <- par('usr')
#text(pu[1] + (pu[2]-pu[1])*0.9, pu[3] + (pu[4] - pu[3])*0.9,
#     paste0("POT5 threshold\n", sw, "% inundation"),
#     adj=c(1,0.5))
dev.off()
}
dim(threshMat)
dim(thresMat)
threshgrid <- readRDS(paste0(wd,"CodeABG/InterimData/threshGridList3.rds"))
threshgrid[[3]]
threshgrid[[4]]
threshgrid <- as.matrix(threshgrid[[4]])
image.plot(threshgrid)
library(fields)
threshgrid <- as.matrix(threshgrid[[4]])
threshgrid0 <- readRDS(paste0(wd,"CodeABG/InterimData/threshGridList3.rds"))
as.matrix(threshgrid0[[4]])
threshgrid <- as.matrix(threshgrid0[[4]])
day <- qv[i]
#flow <- raster(ncname_win, layer=day)
fl <- ncvar_get(netcdf, var, start=c(1,1,day), count=c(-1, -1, 1))
flowM <- as.matrix(fl)[,1000:1]
s <- sum(flowM[!is.na(flowM)] > 0)
Wdown <- which(flowM > threshgrid, arr.ind=T)
print(dim(Wdown))
WW <- which(flowM <= threshgrid, arr.ind=T)
sw <- round(length(which(flowM > threshgrid))/s, 2) * 100 # % inundation
for(i in 1:nrow(WW)){
if(is.na(flowM[WW[i,1], WW[i,2]])) next
if(!(flowM[WW[i,1], WW[i,2]] == -1)){
flowM[WW[i,1], WW[i,2]] <- -0.5
}
}
image.plot(flowM)
flowM <- focal(as.raster(flowM), w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}},
na.rm=T)
plot(as.raster(flowM))
zlim(flowM)
range(flowM)
raster(flowM)
plot(as.raster(flowM), zlim=c(-1,750))
flowM <- focal(as.raster(flowM), w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}},
na.rm=T)
flowM <- as.matrix(fl)[,1000:1]
s <- sum(flowM[!is.na(flowM)] > 0)
Wdown <- which(flowM > threshgrid, arr.ind=T)
print(dim(Wdown))
WW <- which(flowM <= threshgrid, arr.ind=T)
sw <- round(length(which(flowM > threshgrid))/s, 2) * 100 # % inundation
for(i in 1:nrow(WW)){
if(is.na(flowM[WW[i,1], WW[i,2]])) next
if(!(flowM[WW[i,1], WW[i,2]] == -1)){
flowM[WW[i,1], WW[i,2]] <- -0.5
}
}
image.plot(flowM)
flowM <- focal(as.raster(flowM), w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}},
na.rm=T)
flowM <- as.matrix(fl)[,1000:1]
s <- sum(flowM[!is.na(flowM)] > 0)
Wdown <- which(flowM > threshgrid, arr.ind=T)
print(dim(Wdown))
WW <- which(flowM <= threshgrid, arr.ind=T)
sw <- round(length(which(flowM > threshgrid))/s, 2) * 100 # % inundation
for(i in 1:nrow(WW)){
if(is.na(flowM[WW[i,1], WW[i,2]])) next
if(!(flowM[WW[i,1], WW[i,2]] == -1)){
flowM[WW[i,1], WW[i,2]] <- -0.5
}
}
flowN <- focal(as.raster(flowM), w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}},
na.rm=T)
flowN <- focal(as.raster(flowM), w=matrix(1,3,3),fun=max, na.rm=T)
flowR <- raster(flowM)
flowN <- focal(flowR, w=matrix(1,3,3),fun=max, na.rm=T)
flowR <- raster(flowM)
flowN <- focal(flowR, w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}},
na.rm=T)
flowN <- focal(flowR, w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}})
brks <- c(-1.01, -0.51, seq(0, max(1500, na.rm=T), length.out=20))
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(as.matrix(flowN), x=0:700, y=0:1250, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="Easting", ylab="Northing")
dim(as.matrix(flowN))
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(as.matrix(flowN), x=0:700, y=0:1000, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="Easting", ylab="Northing")
image.plot(as.matrix(flowN), x=0:700, y=0:1000, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="Easting", ylab="Northing", axes='n')
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(as.matrix(flowN), x=0:700, y=0:1000, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="Easting", ylab="Northing", axes=F)
flowM <- as.matrix(fl)[,1000:1]
s <- sum(flowM[!is.na(flowM)] > 0)
Wdown <- which(flowM > threshgrid, arr.ind=T)
print(dim(Wdown))
WW <- which(flowM <= threshgrid, arr.ind=T)
sw <- round(length(which(flowM > threshgrid))/s, 2) * 100 # % inundation
for(i in 1:nrow(WW)){
if(is.na(flowM[WW[i,1], WW[i,2]])) next
if(!(flowM[WW[i,1], WW[i,2]] == -1)){
flowM[WW[i,1], WW[i,2]] <- -0.5
}
}
flowR <- raster(flowM)
flowN <- focal(flowR, w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}})
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(as.matrix(flowN), x=0:700, y=0:1000, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="Easting", ylab="Northing", axes=F)
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(as.matrix(flowR), x=0:700, y=0:1000, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="", ylab="", axes=F)
par(mar=c(3,3,1,1), mgp=c(2,1,0))
image.plot(as.matrix(flowM), x=0:700, y=0:1000, ylim=c(0,1250), zlim=c(-2,1500),
col=c("grey90", "grey90", heat.colors(19)), breaks=brks, asp=1,
xlab="", ylab="", axes=F)
length(WDown)
length(Wdown)
image.plot(threshgrid)
plot(threshgrid)
image(threshgrid)
image(flowM)
image(threshgrid)
threshgrid <- as.matrix(threshgrid0[[4]])[,1000:1]
s <- sum(flowM[!is.na(flowM)] > 0)
Wdown <- which(flowM > threshgrid, arr.ind=T)
print(dim(Wdown))
WW <- which(flowM <= threshgrid, arr.ind=T)
sw <- round(length(which(flowM > threshgrid))/s, 2) * 100 # % inundation
for(i in 1:nrow(WW)){
if(is.na(flowM[WW[i,1], WW[i,2]])) next
if(!(flowM[WW[i,1], WW[i,2]] == -1)){
flowM[WW[i,1], WW[i,2]] <- -0.5
}
}
flowR <- raster(flowM)
flowN <- focal(flowR, w=matrix(1,3,3),
fun=function(x){if(!all(is.na(x))){max(x, na.rm=T)}else{return(NA)}})
brks <- c(-1.01, -0.51, seq(0, max(1500, na.rm=T), length.out=20))
