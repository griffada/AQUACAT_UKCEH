cdfPrimer(RCM=RCM, period=period, method="HT", NE=ncol(eventflow)-4,
NH=NH1, thresh1, ws1, rn[r1,], savepath)
ht_events <- nc_open(savepath, write=T)
ncvar_put(ht_events, "flow", as.matrix(eventflow[,-(1:4)]))
source('S:/CodeABG/csvToCdf_HT.R')
eventSummaryLine <- function(obs_events, i, threshold, r1=1:19914){
ni <- eventNo[i]
vvec <- sum(
(ncvar_get(obs_events, "flow", start=c(1,i), count=c(-1,1)) > threshold),
na.rm=T)
avec <- ncvar_get(obs_events, "ape", start=c(1,i), count=c(-1,1))
min_dvec <- min(
ncvar_get(obs_events, "dpe", start=c(1,i), count=c(-1,1)),
na.rm=T)
D <- eventDayList[[jT]][[jW]][ni]
L <- eventLList[[jT]][[jW]][ni]
ncl <- nclustevent(avec < (1-exp(-2)))
pk <- peakyfun(avec, (1-exp(-2)))
return(list(i, D, L, vvec, min(avec), min_dvec, season(D), ncl, pk))
}
if(interactive()){commandArgs <- function(...){c("04","future", "NW")}}
#### SETUP ####----------------------
if(substr(osVersion,1,3) == "Win"){
source("S:/CodeABG/setup_script_00.R")
}else if (substr(osVersion,1,3) == "Fed"){
source("/prj/aquacat/CodeABG/setup_script_00.R")
}else{
source("~/AQUACAT/CodeABG/setup_script_00.R")
}
regions <- c("ANG", "ESC", "NE", "NSC", "NW", "SE", "SEV", "SSC", "SW",
"THA", "TRE", "WAL")
REGIONS <- c("NW")
rn <- as.data.frame(rn)
r1 <- which(rn_regions$REGION == REGIONS[1])
nclustevent <- function(v, radii=50) {
# This function estimates the number of "seperate clusters" of event going on during
# a widespread event.
ne0 <- sum(v, na.rm=T)
event1 <- rbind(as.matrix(rn[r1,][v,]), matrix(c(
700, 0, 700000, 1000000
), nrow = 1))
d <- dist(event1[, 1:2])
d2 <- dist(event1[1:ne0, 1:2])
if ((max(d2) > radii) & (ne0 >= 10)) {
hh <- hclust(d, method = "single")
ch <- max(cutree(hh, h = 0.8 * sort(hh$height, decreasing = T)[2])) - 1
if(sort(hh$height,decreasing=T)[2] < 0.2*max(hh$height)){
ch <- 1
}
ch <- min(ch, 4)
} else{
ch <- 1
}
ch
}
peakyfun <- function(v, thr) {
mn <- min(v, na.rm=T)
if (mn > thr | mn > 1e8) {
return(0)
}else{
mn50 <- mean(c(mn, thr))
return(sum(v < mn50) / sum(v < thr))
}
}
threshMat <- readRDS(paste0(data_wd, subfold, "threshMat_RCM",
RCM, suffix, ".rds"))
load(paste0(data_wd, subfold, "eventLists_RCM", RCM, suffix, ".RDa"))
REG="NW"
r1 <- which(rn_regions$REGION == REG)
obs_events <- nc_open(paste0(data_wd,subfold, "/", REG, "/",
"eventOBS_region_", REG, "_RCM", RCM, suffix, ".nc"))
NN <- obs_events$dim$event$len
eventSummaryFrame <- data.frame(eventNumber=numeric(NN),
eventDay=numeric(NN),
eventLength = numeric(NN),
area = numeric(NN),
peakA = numeric(NN),
peakD = numeric(NN),
season = character(NN),
nclusters = numeric(NN),
peakyness = numeric(NN),
stringsAsFactors = FALSE)
# (D %/% 90) %% 4 for season 0,1,2,3: DJF, MAM, JJA, SON
season <- function(D) switch(((D %/% 90) %% 4) + 1, "DJF", "MAM", "JJA", "SON")
ST <- Sys.time()
ST0 <- Sys.time()
eventNo <- ncvar_get(obs_events, "eventNo")
i=1
eventSummaryFrame[i,] <- eventSummaryLine(obs_events, i, threshMat[r1,jT])
debug(eventSummaryLine)
eventSummaryFrame[i,] <- eventSummaryLine(obs_events, i, threshMat[r1,jT])
D#
ni
i
eventNo[1:10]
avec[1:10]
if(interactive()){
commandArgs <- function(...){c("04","future","NW")}
}
#### SETUP ####----------------------------------------------------------
if(substr(osVersion,1,3) == "Win"){
source("S:/CodeABG/setup_script_00.R")
}else if (substr(osVersion,1,3) == "Fed"){
source("/prj/aquacat/CodeABG/setup_script_00.R")
}else{
source("~/AQUACAT/CodeABG/setup_script_00.R")
}
if(interactive()){
commandArgs <- function(...){c("04","future","NW")}
}
#### SETUP ####----------------------------------------------------------
if(substr(osVersion,1,3) == "Win"){
source("S:/CodeABG/setup_script_00.R")
}else if (substr(osVersion,1,3) == "Fed"){
source("/prj/aquacat/CodeABG/setup_script_00.R")
}else{
source("~/AQUACAT/CodeABG/setup_script_00.R")
}
library(ilaprosUtils)
